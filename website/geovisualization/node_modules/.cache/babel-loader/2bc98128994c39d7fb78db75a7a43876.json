{"ast":null,"code":"var _jsxFileName = \"/Users/j.kanlaya/Downloads/Mike/website/geovisualization/src/pages/Maps/mapsProv01.js\";\n// ============================= Google Maps TEST =============================\n// AIzaSyCoOZKGkK9Ili7RHCrB0dVNqhy6_e1yKyM\nimport React, { Component } from 'react';\nimport { Map, InfoWindow, Marker, GoogleApiWrapper } from 'google-maps-react';\nimport axios from \"axios\";\nimport NavbarMaps from '../../components/common/navbarMaps';\nimport './maps.css';\nconst mapStyles = {\n  top: '0',\n  buttom: '0',\n  width: 'auto',\n  height: 'auto',\n  left: '300px'\n};\n\nclass MapContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      showingInfoWindow: false,\n      activeMarker: {},\n      selectedPlace: {},\n      provinceResponse: [],\n      placeResponse: [],\n      placeTarget: [],\n      coor: [],\n      clickedPlace: '',\n      targetProvince: '',\n      threadId: '',\n      threadTitle: ''\n    };\n\n    this.onMarkerClick = (props, marker, e) => this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true,\n      clickedPlace: props.name\n    });\n\n    this.onMapClicked = props => {\n      if (this.state.showingInfoWindow) {\n        this.setState({\n          showingInfoWindow: false,\n          activeMarker: null\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    axios.get(`http://localhost:30011/getRankProvince`, {\n      params: {\n        provinceRank: 1\n      }\n    }).then(res => {\n      const provinceResponse = res.data[0];\n      this.setState({\n        provinceResponse\n      });\n      this.setState({\n        targetProvince: this.state.provinceResponse.provinceTh\n      });\n      console.log(this.state.targetProvince);\n    });\n    axios.get(`http://localhost:30011/getThreadData`, {\n      params: {\n        // provinceTh: this.state.targetProvince\n        provinceTh: \"สมุทรสงคราม\"\n      }\n    }).then(res => {\n      this.setState({\n        placeResponse: res.data\n      });\n      console.log(this.state.placeResponse);\n      var tmp = [];\n      this.state.placeResponse.map(row => row.coor.forEach(function (data) {\n        tmp.push(data);\n      }));\n      this.setState({\n        coor: tmp\n      });\n      console.log(this.state.coor);\n      console.log(this.state.coor[0]);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      class: \"noscroll\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(NavbarMaps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"sidenav\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"sidePlaceName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }\n    }, this.state.targetProvince), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"sideClickedPlace\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }\n    }, this.state.clickedPlace), this.state.coor.map(place => /*#__PURE__*/React.createElement(\"li\", {\n      key: place.placeId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 25\n      }\n    }, place.placeName))), /*#__PURE__*/React.createElement(Map, {\n      google: this.props.google,\n      style: mapStyles,\n      zoom: 10,\n      initialCenter: {\n        lat: 13.407180,\n        lng: 99.998090\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(InfoWindow, {\n      marker: this.state.activeMarker,\n      visible: this.state.showingInfoWindow,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 25\n      }\n    }, this.state.selectedPlace.name))));\n  }\n\n} // export default MapContainer;\n\n\nexport default GoogleApiWrapper({\n  // apiKey: ('AIzaSyCoOZKGkK9Ili7RHCrB0dVNqhy6_e1yKyM')\n  apiKey: 'AIzaSyDDViAvlzx_1iSnaUKtNNLr-OuJpSeypjI'\n})(MapContainer);","map":{"version":3,"sources":["/Users/j.kanlaya/Downloads/Mike/website/geovisualization/src/pages/Maps/mapsProv01.js"],"names":["React","Component","Map","InfoWindow","Marker","GoogleApiWrapper","axios","NavbarMaps","mapStyles","top","buttom","width","height","left","MapContainer","state","showingInfoWindow","activeMarker","selectedPlace","provinceResponse","placeResponse","placeTarget","coor","clickedPlace","targetProvince","threadId","threadTitle","onMarkerClick","props","marker","e","setState","name","onMapClicked","componentDidMount","get","params","provinceRank","then","res","data","provinceTh","console","log","tmp","map","row","forEach","push","render","place","placeId","placeName","google","lat","lng","apiKey"],"mappings":"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","sourcesContent":["// ============================= Google Maps TEST =============================\n// AIzaSyCoOZKGkK9Ili7RHCrB0dVNqhy6_e1yKyM\n\nimport React, { Component } from 'react';\nimport {Map, InfoWindow, Marker, GoogleApiWrapper} from 'google-maps-react';\nimport axios from \"axios\";\nimport NavbarMaps from '../../components/common/navbarMaps';\nimport './maps.css'\n\nconst mapStyles = {\n    top: '0',\n    buttom: '0',\n    width: 'auto',\n    height: 'auto',\n    left: '300px',\n};\nclass MapContainer extends Component {    \n    state = {\n        showingInfoWindow: false,\n        activeMarker: {},\n        selectedPlace: {},\n        provinceResponse:[],        \n        placeResponse:[],\n        placeTarget:[],\n        coor:[],\n        clickedPlace: '',\n        targetProvince: '',\n        threadId:'',\n        threadTitle: '',\n\n    };\n    \n    componentDidMount() {\n        axios.get(`http://localhost:30011/getRankProvince`, {\n            params: {\n                provinceRank: 1\n            }\n        })\n            .then(res => {\n                const provinceResponse = res.data[0];\n                this.setState({ provinceResponse });\n                this.setState({ targetProvince: this.state.provinceResponse.provinceTh })\n                console.log(this.state.targetProvince);\n        })\n\n        axios.get(`http://localhost:30011/getThreadData`, {\n            params: {\n                // provinceTh: this.state.targetProvince\n                provinceTh: \"สมุทรสงคราม\"\n            }\n        })\n        .then(res => {\n            this.setState({ placeResponse: res.data });\n            console.log(this.state.placeResponse);\n\n            var tmp = []\n            this.state.placeResponse.map(row => \n                row.coor.forEach(function(data){\n                    tmp.push(data);\n                })\n            )\n            this.setState({coor: tmp})\n            console.log(this.state.coor);\n            console.log(this.state.coor[0]);            \n\n        })  \n    }\n\n    onMarkerClick = (props, marker, e) =>\n    this.setState({\n        selectedPlace: props,\n        activeMarker: marker,\n        showingInfoWindow: true,\n        clickedPlace: props.name,\n    });\n\n    onMapClicked = (props) => {\n        if (this.state.showingInfoWindow) {\n            this.setState({\n                showingInfoWindow: false,\n                activeMarker: null\n            })\n        }\n    };\n\n    render() {\n        return (  \n            <div class=\"noscroll\">\n                <NavbarMaps />\n                <div class=\"sidenav\">\n                    <div class=\"sidePlaceName\">{this.state.targetProvince}</div>\n                    <div class=\"sideClickedPlace\">{this.state.clickedPlace}</div>\n                    {this.state.coor.map( place => \n                        <li key={place.placeId}>{place.placeName}</li>\n                    )}\n                    {/* {this.state.placeResponse.map( thread => \n                        <li key={thread._id}>{thread.threadTitle}</li>\n                    )} */}\n                </div>\n\n                <Map google={this.props.google}\n                    style={mapStyles}\n                    zoom={10}\n                    initialCenter={{lat: 13.407180, lng: 99.998090}}\n                >\n                    {/* {this.state.coor.map( place => \n                        <Marker \n                            key={place.placeId}\n                            onClick={this.onMarkerClick}\n                            name={place.placeName}\n                            position={{\n                                lat: place.lat, \n                                lng: place.lon}} \n                            />\n                    )} */}\n\n                    {/* <Marker\n                        onClick={this.onMarkerClick}\n                        name={\"test\"}\n                        position={{lat: 13.407180, lng: 99.998090}} \n                    /> */}\n\n                    <InfoWindow\n                        marker={this.state.activeMarker}\n                        visible={this.state.showingInfoWindow}>\n                        <p>{this.state.selectedPlace.name}</p>\n                    </InfoWindow>\n                </Map>\n            </div>\n        );\n    }\n}\n\n// export default MapContainer;\n\nexport default GoogleApiWrapper({\n    // apiKey: ('AIzaSyCoOZKGkK9Ili7RHCrB0dVNqhy6_e1yKyM')\n    apiKey: ('AIzaSyDDViAvlzx_1iSnaUKtNNLr-OuJpSeypjI')\n})(MapContainer)"]},"metadata":{},"sourceType":"module"}