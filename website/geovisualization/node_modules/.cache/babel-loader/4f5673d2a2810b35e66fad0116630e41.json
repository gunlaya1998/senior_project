{"ast":null,"code":"var _jsxFileName = \"/Users/j.kanlaya/Downloads/Mike/website/geovisualization/src/pages/Maps/mapsProv01.js\";\n// ============================= Google Maps TEST =============================\n// AIzaSyCoOZKGkK9Ili7RHCrB0dVNqhy6_e1yKyM\nimport React, { Component } from 'react';\nimport { Map, InfoWindow, Marker, GoogleApiWrapper } from 'google-maps-react';\nimport axios from \"axios\";\nimport NavbarMaps from '../../components/common/navbarMaps';\nimport './maps.css';\nconst mapStyles = {\n  top: '0',\n  buttom: '0',\n  width: 'auto',\n  height: 'auto',\n  left: '300px'\n};\n\nclass MapContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      showingInfoWindow: false,\n      activeMarker: {},\n      selectedPlace: {},\n      provinceResponse: [],\n      placeResponse: [],\n      placeTarget: [],\n      latLon: [],\n      clickedPlace: '',\n      targetProvince: '',\n      targetPlace: ''\n    };\n  }\n\n  componentDidMount() {\n    axios.get(`http://localhost:30011/getRankProvince`, {\n      params: {\n        provinceRank: 1\n      }\n    }).then(res => {\n      const provinceResponse = res.data[0];\n      this.setState({\n        provinceResponse\n      });\n      this.setState({\n        targetProvince: this.state.provinceResponse.provinceTh\n      });\n      console.log(this.state.targetProvince);\n    }); // axios.get(`http://localhost:30011/getThreadData?provinceTh=สมุทรสงคราม`)\n    // const query = \"สมุทรสงคราม\"\n    // axios.get(`http://localhost:30011/getThreadData?provinceTh=${query}`)\n    // axios.get(`http://localhost:30011/getThreadData?provinceTh=${this.state.targetProvince}`)\n\n    axios.get(`http://localhost:30011/getThreadData`, {\n      params: {\n        // provinceTh: this.state.targetProvince\n        provinceTh: \"สมุทรสงคราม\"\n      }\n    }).then(res => {\n      console.log(res.data);\n      this.setState({\n        placeResponse: res.data\n      }); // const placeTarget = this.state.placeResponse.map(data =>\n      // )\n      // this.setState({placeTarget});\n      // const target = this.state.placeResponse.map( data => \n      //     data.provinceTh === this.state.targetProvince ? data.latLon : null\n      // )\n      // this.setState({latLon:target});\n    });\n  } // onMarkerClick = (props, marker, e) =>\n  // this.setState({\n  //     selectedPlace: props,\n  //     activeMarker: marker,\n  //     showingInfoWindow: true,\n  //     clickedPlace: props.name,\n  // });\n  // onMapClicked = (props) => {\n  //     if (this.state.showingInfoWindow) {\n  //         this.setState({\n  //             showingInfoWindow: false,\n  //             activeMarker: null\n  //         })\n  //     }\n  // };\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      class: \"noscroll\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(NavbarMaps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"sidenav\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"sidePlaceName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }\n    }, this.state.targetProvince), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"sideClickedPlace\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }\n    }, this.state.clickedPlace), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }\n    }, this.state.placeResponse)));\n  }\n\n} // export default MapContainer;\n\n\nexport default GoogleApiWrapper({\n  // apiKey: ('AIzaSyCoOZKGkK9Ili7RHCrB0dVNqhy6_e1yKyM')\n  apiKey: 'AIzaSyDDViAvlzx_1iSnaUKtNNLr-OuJpSeypjI'\n})(MapContainer);","map":{"version":3,"sources":["/Users/j.kanlaya/Downloads/Mike/website/geovisualization/src/pages/Maps/mapsProv01.js"],"names":["React","Component","Map","InfoWindow","Marker","GoogleApiWrapper","axios","NavbarMaps","mapStyles","top","buttom","width","height","left","MapContainer","state","showingInfoWindow","activeMarker","selectedPlace","provinceResponse","placeResponse","placeTarget","latLon","clickedPlace","targetProvince","targetPlace","componentDidMount","get","params","provinceRank","then","res","data","setState","provinceTh","console","log","render","apiKey"],"mappings":"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","sourcesContent":["// ============================= Google Maps TEST =============================\n// AIzaSyCoOZKGkK9Ili7RHCrB0dVNqhy6_e1yKyM\n\nimport React, { Component } from 'react';\nimport {Map, InfoWindow, Marker, GoogleApiWrapper} from 'google-maps-react';\nimport axios from \"axios\";\nimport NavbarMaps from '../../components/common/navbarMaps';\nimport './maps.css'\n\nconst mapStyles = {\n    top: '0',\n    buttom: '0',\n    width: 'auto',\n    height: 'auto',\n    left: '300px',\n};\nclass MapContainer extends Component {    \n    state = {\n        showingInfoWindow: false,\n        activeMarker: {},\n        selectedPlace: {},\n        provinceResponse:[],        \n        placeResponse:[],\n        placeTarget:[],\n        latLon:[],\n        clickedPlace: '',\n        targetProvince: '',\n        targetPlace: '',\n    };\n    \n    componentDidMount() {\n        axios.get(`http://localhost:30011/getRankProvince`, {\n            params: {\n                provinceRank: 1\n            }\n        })\n            .then(res => {\n                const provinceResponse = res.data[0];\n                this.setState({ provinceResponse });\n\n                this.setState({targetProvince:this.state.provinceResponse.provinceTh})\n                console.log(this.state.targetProvince);\n        })\n\n        // axios.get(`http://localhost:30011/getThreadData?provinceTh=สมุทรสงคราม`)\n        // const query = \"สมุทรสงคราม\"\n        // axios.get(`http://localhost:30011/getThreadData?provinceTh=${query}`)\n        // axios.get(`http://localhost:30011/getThreadData?provinceTh=${this.state.targetProvince}`)\n        axios.get(`http://localhost:30011/getThreadData`, {\n            params: {\n                // provinceTh: this.state.targetProvince\n                provinceTh: \"สมุทรสงคราม\"\n            }\n        })\n        .then(res => {\n            console.log(res.data);\n            this.setState({ placeResponse: res.data });\n\n            // const placeTarget = this.state.placeResponse.map(data =>\n\n            // )\n            // this.setState({placeTarget});\n\n            // const target = this.state.placeResponse.map( data => \n            //     data.provinceTh === this.state.targetProvince ? data.latLon : null\n            // )\n            // this.setState({latLon:target});\n        })\n    }\n\n    // onMarkerClick = (props, marker, e) =>\n    // this.setState({\n    //     selectedPlace: props,\n    //     activeMarker: marker,\n    //     showingInfoWindow: true,\n    //     clickedPlace: props.name,\n    // });\n\n    // onMapClicked = (props) => {\n    //     if (this.state.showingInfoWindow) {\n    //         this.setState({\n    //             showingInfoWindow: false,\n    //             activeMarker: null\n    //         })\n    //     }\n    // };\n\n    render() {\n\n        return (  \n            <div class=\"noscroll\">\n                <NavbarMaps />\n                <div class=\"sidenav\">\n                    <div class=\"sidePlaceName\">{this.state.targetProvince}</div>\n                    <div class=\"sideClickedPlace\">{this.state.clickedPlace}</div>\n                    <h4>{this.state.placeResponse}</h4>\n\n                </div>\n\n                {/* <Map google={this.props.google}\n                    style={mapStyles}\n                    zoom={10}\n                    initialCenter={{lat: 18.7756318, lng: 100.7730417}}\n                >\n                    {this.state.placeTarget.map( data => {\n                        return(\n                            <Marker\n                                onClick={this.onMarkerClick}\n                                name={data}\n                                position={{lat: 18.7749045, lng: 100.771892}} \n                            />\n                        )}\n                    )}\n\n                    <InfoWindow\n                        marker={this.state.activeMarker}\n                        visible={this.state.showingInfoWindow}>\n                        <p>{this.state.selectedPlace.name}</p>\n                    </InfoWindow>\n                </Map> */}\n            </div>\n        );\n    }\n}\n\n// export default MapContainer;\n\nexport default GoogleApiWrapper({\n    // apiKey: ('AIzaSyCoOZKGkK9Ili7RHCrB0dVNqhy6_e1yKyM')\n    apiKey: ('AIzaSyDDViAvlzx_1iSnaUKtNNLr-OuJpSeypjI')\n})(MapContainer)"]},"metadata":{},"sourceType":"module"}