{"ast":null,"code":"var _jsxFileName = \"/Users/j.kanlaya/Downloads/Mike/website/geovisualization/src/pages/Maps/mapsProv01.js\";\nimport React, { Component } from 'react';\nimport { Map, InfoWindow, Marker, GoogleApiWrapper } from 'google-maps-react';\nimport axios from \"axios\";\nimport NavbarMaps from '../../components/common/navbarMaps';\nimport './maps.css';\nconst mapStyles = {\n  top: '0',\n  buttom: '0',\n  width: 'auto',\n  height: 'auto',\n  left: '300px'\n};\n\nclass MapContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      showingInfoWindow: false,\n      activeMarker: {},\n      selectedPlace: {},\n      provinceResponse: [],\n      placeResponse: [],\n      placeTarget: [],\n      placeList: [],\n      coor: [],\n      clickedPlace: '',\n      targetProvince: '',\n      threadId: '',\n      threadTitle: '',\n      mapLat: Number,\n      mapLon: Number\n    };\n\n    this.onMarkerClick = (props, marker, e) => this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true,\n      clickedPlace: props.name\n    });\n\n    this.onMapClicked = props => {\n      if (this.state.showingInfoWindow) {\n        this.setState({\n          showingInfoWindow: false,\n          activeMarker: null\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    axios.get(`http://localhost:30011/getRankProvince`, {\n      params: {\n        provinceRank: 1\n      }\n    }).then(res => {\n      const provinceResponse = res.data[0];\n      this.setState({\n        provinceResponse\n      });\n      this.setState({\n        targetProvince: this.state.provinceResponse.provinceTh\n      });\n      const lat = this.provinceResponse.provinceLat;\n      const lon = this.provinceResponse.provinceLon;\n      this.setState({\n        mapLat: lat\n      });\n      this.setState({\n        mapLon: lon\n      });\n      console.log(typeof this.state.provinceResponse.provinceLat, this.state.provinceResponse.provinceLon);\n      return axios.get(`http://localhost:30011/getThreadData`, {\n        params: {\n          provinceTh: this.state.targetProvince\n        }\n      });\n    }).then(res => {\n      this.setState({\n        placeResponse: res.data\n      });\n      var tmp = [];\n      this.state.placeResponse.map(row => row.coor.forEach(function (data) {\n        tmp.push(data);\n      }));\n      this.setState({\n        coor: tmp\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      class: \"noscroll\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(NavbarMaps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"sidenav\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"sidePlaceName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }\n    }, this.state.targetProvince), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"sideClickedPlace\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }\n    }, this.state.clickedPlace), this.state.placeResponse.map(thread => {\n      return thread.placeList.map(place => {\n        return place === this.state.clickedPlace ? /*#__PURE__*/React.createElement(\"a\", {\n          href: \"https://pantip.com/topic/\" + thread.threadId,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          class: \"sideLinkBox\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          class: \"sideLinkTitle\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 41\n          }\n        }, thread.threadTitle))) : null;\n      });\n    })), /*#__PURE__*/React.createElement(Map, {\n      google: this.props.google,\n      style: mapStyles,\n      zoom: 11 // initialCenter={this.state.map_center}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }\n    }, this.state.coor.map(place => {\n      return place.province === this.state.targetProvince ? /*#__PURE__*/React.createElement(Marker, {\n        key: place.placeId,\n        onClick: this.onMarkerClick,\n        name: place.placeName,\n        position: {\n          lat: place.lat,\n          lng: place.lon\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 29\n        }\n      }) : null;\n    }), /*#__PURE__*/React.createElement(InfoWindow, {\n      marker: this.state.activeMarker,\n      visible: this.state.showingInfoWindow,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 25\n      }\n    }, this.state.selectedPlace.name))));\n  }\n\n}\n\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyDDViAvlzx_1iSnaUKtNNLr-OuJpSeypjI'\n})(MapContainer);","map":{"version":3,"sources":["/Users/j.kanlaya/Downloads/Mike/website/geovisualization/src/pages/Maps/mapsProv01.js"],"names":["React","Component","Map","InfoWindow","Marker","GoogleApiWrapper","axios","NavbarMaps","mapStyles","top","buttom","width","height","left","MapContainer","state","showingInfoWindow","activeMarker","selectedPlace","provinceResponse","placeResponse","placeTarget","placeList","coor","clickedPlace","targetProvince","threadId","threadTitle","mapLat","Number","mapLon","onMarkerClick","props","marker","e","setState","name","onMapClicked","componentDidMount","get","params","provinceRank","then","res","data","provinceTh","lat","provinceLat","lon","provinceLon","console","log","tmp","map","row","forEach","push","render","thread","place","google","province","placeId","placeName","lng","apiKey"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {Map, InfoWindow, Marker, GoogleApiWrapper} from 'google-maps-react';\nimport axios from \"axios\";\nimport NavbarMaps from '../../components/common/navbarMaps';\nimport './maps.css'\n\nconst mapStyles = {\n    top: '0',\n    buttom: '0',\n    width: 'auto',\n    height: 'auto',\n    left: '300px',\n};\nclass MapContainer extends Component {    \n    state = {\n        showingInfoWindow: false,\n        activeMarker: {},\n        selectedPlace: {},\n        provinceResponse:[],        \n        placeResponse:[],\n        placeTarget:[],\n        placeList:[], \n        coor:[],\n        clickedPlace: '',\n        targetProvince: '',\n        threadId:'',\n        threadTitle: '',\n        mapLat: Number, \n        mapLon: Number\n    };\n    \n    componentDidMount() {\n        axios.get(`http://localhost:30011/getRankProvince`, {\n            params: {\n                provinceRank: 1\n            }\n        })\n        .then(res => {\n            const provinceResponse = res.data[0];\n            this.setState({ provinceResponse });\n            this.setState({ targetProvince: this.state.provinceResponse.provinceTh });\n\n            const lat = this.provinceResponse.provinceLat;\n            const lon = this.provinceResponse.provinceLon;\n            this.setState({ mapLat: lat });\n            this.setState({ mapLon: lon });\n\n            console.log(typeof(this.state.provinceResponse.provinceLat), this.state.provinceResponse.provinceLon);\n            return axios.get(`http://localhost:30011/getThreadData`, {\n                params: {\n                    provinceTh: this.state.targetProvince\n                }\n            });\n        })\n        .then(res => {\n            this.setState({ placeResponse: res.data });\n\n            var tmp = []\n            this.state.placeResponse.map(row => \n                row.coor.forEach(function(data){\n                    tmp.push(data);\n                })\n            )\n            this.setState({coor: tmp});\n        })  \n    }\n\n    onMarkerClick = (props, marker, e) =>\n    this.setState({\n        selectedPlace: props,\n        activeMarker: marker,\n        showingInfoWindow: true,\n        clickedPlace: props.name,\n    });\n\n    onMapClicked = (props) => {\n        if (this.state.showingInfoWindow) {\n            this.setState({\n                showingInfoWindow: false,\n                activeMarker: null\n            })\n        }\n    };\n\n    render() {\n        return (  \n            <div class=\"noscroll\">\n                <NavbarMaps />\n                <div class=\"sidenav\">\n                    <div class=\"sidePlaceName\">{this.state.targetProvince}</div>\n                    <div class=\"sideClickedPlace\">{this.state.clickedPlace}</div>\n\n                    {this.state.placeResponse.map( thread => {\n                        return thread.placeList.map( place => {\n                            return place === this.state.clickedPlace ?\n                                <a href={\"https://pantip.com/topic/\"+thread.threadId}>\n                                    <div class=\"sideLinkBox\">\n                                        <div class=\"sideLinkTitle\">\n                                            {thread.threadTitle}\n                                        </div>\n                                    </div>  \n                                </a>\n                                : null\n                        })\n                    })}\n                </div>\n                \n                <Map google={this.props.google}\n                    style={mapStyles}\n                    zoom={11}\n                    // initialCenter={this.state.map_center}\n                >\n                    {this.state.coor.map( place => {\n                        return place.province === this.state.targetProvince ?\n                            <Marker key={place.placeId}\n                                onClick={this.onMarkerClick}\n                                name={place.placeName}\n                                position={{lat: place.lat,lng: place.lon}}/>\n                            : null\n                        }\n                    )}\n\n                    <InfoWindow\n                        marker={this.state.activeMarker}\n                        visible={this.state.showingInfoWindow}>\n                        <p>{this.state.selectedPlace.name}</p>\n                    </InfoWindow>\n                </Map>\n            </div>\n        );\n    }\n}\n\nexport default GoogleApiWrapper({\n    apiKey: ('AIzaSyDDViAvlzx_1iSnaUKtNNLr-OuJpSeypjI')\n})(MapContainer)"]},"metadata":{},"sourceType":"module"}