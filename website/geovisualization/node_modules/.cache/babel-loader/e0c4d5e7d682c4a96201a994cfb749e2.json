{"ast":null,"code":"var _jsxFileName = \"/Users/j.kanlaya/Downloads/Mike/website/geovisualization/src/pages/Maps/mapsProv.js\";\nimport React, { Component } from 'react';\nimport { Helmet } from 'react-helmet';\nimport { Map, InfoWindow, Marker, GoogleApiWrapper } from 'google-maps-react';\nimport axios from \"axios\";\nimport NavbarMaps from '../../components/common/navbarMaps';\nimport './maps.css';\nconst REACT_APP_API_KEY = 'AIzaSyDDViAvlzx_1iSnaUKtNNLr-OuJpSeypjI';\nconst mapStyles = {\n  top: '0',\n  buttom: '0',\n  width: 'auto',\n  height: 'auto',\n  left: '300px'\n};\n\nclass MapContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      showingInfoWindow: false,\n      activeMarker: {},\n      selectedPlace: {},\n      provinceResponse: [],\n      placeResponse: [],\n      placeList: [],\n      coor: [],\n      clickedPlace: '',\n      targetProvince: '',\n      threadId: '',\n      threadTitle: '',\n      mapLat: \"\",\n      mapLon: \"\"\n    };\n\n    this.onMarkerClick = (props, marker, e) => this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true,\n      clickedPlace: props.name\n    });\n\n    this.onMapClicked = props => {\n      if (this.state.showingInfoWindow) {\n        this.setState({\n          showingInfoWindow: false,\n          activeMarker: null\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    axios.get(`http://localhost:30011/getRankProvince`, {\n      params: {\n        provinceRank: this.props.match.params.rank\n      }\n    }).then(res => {\n      const provinceResponse = res.data[0];\n      this.setState({\n        provinceResponse\n      });\n      this.setState({\n        targetProvince: this.state.provinceResponse.provinceTh\n      });\n      const lat = this.state.provinceResponse.provinceLat;\n      const lon = this.state.provinceResponse.provinceLon;\n      this.setState({\n        mapLat: lat\n      });\n      this.setState({\n        mapLon: lon\n      });\n      return axios.get(`http://localhost:30011/getThreadData`, {\n        params: {\n          provinceTh: this.state.targetProvince\n        }\n      });\n    }).then(res => {\n      this.setState({\n        placeResponse: res.data\n      });\n      var tmp = [];\n      this.state.placeResponse.map(row => row.coor.forEach(function (data) {\n        tmp.push(data);\n      }));\n      this.setState({\n        coor: tmp\n      });\n    });\n  }\n\n  render() {\n    const position = {\n      lat: this.state.mapLat,\n      lng: this.state.mapLon\n    };\n    const target = this.state.targetProvince;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      class: \"noscroll\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Helmet, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"title\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }\n    }, \"Travel Guide | \", target)), /*#__PURE__*/React.createElement(NavbarMaps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"sidenav\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"sidePlaceName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }\n    }, this.state.targetProvince), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"sideClickedPlace\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }\n    }, this.state.clickedPlace), this.state.placeResponse.map(thread => {\n      return thread.placeList.map(place => {\n        return place === this.state.clickedPlace ? /*#__PURE__*/React.createElement(\"a\", {\n          href: \"https://pantip.com/topic/\" + thread.threadId,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          class: \"sideLinkBox\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          class: \"sideLinkTitle\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 41\n          }\n        }, thread.threadTitle))) : null;\n      });\n    })), /*#__PURE__*/React.createElement(Map, {\n      google: this.props.google,\n      style: mapStyles,\n      zoom: 11,\n      center: position,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }\n    }, this.state.coor.map(place => {\n      return place.province === this.state.targetProvince ? /*#__PURE__*/React.createElement(Marker, {\n        key: place.placeId,\n        onClick: this.onMarkerClick,\n        name: place.placeName,\n        position: {\n          lat: place.lat,\n          lng: place.lon\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 29\n        }\n      }) : null;\n    }), /*#__PURE__*/React.createElement(StyledInfoWindow, {\n      marker: this.state.activeMarker,\n      visible: this.state.showingInfoWindow,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 25\n      }\n    }, this.state.selectedPlace.name), /*#__PURE__*/React.createElement(\"img\", {\n      src: `https://maps.googleapis.com/maps/api/place/photo?maxwidth=400&maxheight=400&photoreference=ATtYBwKOm3-AaHIVAeKfO2FcdI-aklSxYYILLlqV6xAjflHX4xTtgdHOAfs6yCyaOEDyvkxILAu_kuSnVwCY3VK1XmDDSUPI6j6HOI1tuDbyQdFsjcE9QUgLsMHtYWmzHCjH1VxTkVxhiqlhthGtzSZCS2ie48KSRIihzdisFWDX_PtsWIPw&key=${REACT_APP_API_KEY}`,\n      alt: this.state.selectedPlace.name,\n      width: 168,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n}\n\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyDDViAvlzx_1iSnaUKtNNLr-OuJpSeypjI'\n})(MapContainer);","map":{"version":3,"sources":["/Users/j.kanlaya/Downloads/Mike/website/geovisualization/src/pages/Maps/mapsProv.js"],"names":["React","Component","Helmet","Map","InfoWindow","Marker","GoogleApiWrapper","axios","NavbarMaps","REACT_APP_API_KEY","mapStyles","top","buttom","width","height","left","MapContainer","state","showingInfoWindow","activeMarker","selectedPlace","provinceResponse","placeResponse","placeList","coor","clickedPlace","targetProvince","threadId","threadTitle","mapLat","mapLon","onMarkerClick","props","marker","e","setState","name","onMapClicked","componentDidMount","get","params","provinceRank","match","rank","then","res","data","provinceTh","lat","provinceLat","lon","provinceLon","tmp","map","row","forEach","push","render","position","lng","target","thread","place","google","province","placeId","placeName","apiKey"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Helmet } from 'react-helmet';\nimport {Map, InfoWindow, Marker, GoogleApiWrapper} from 'google-maps-react';\nimport axios from \"axios\";\nimport NavbarMaps from '../../components/common/navbarMaps';\nimport './maps.css'\nconst REACT_APP_API_KEY = 'AIzaSyDDViAvlzx_1iSnaUKtNNLr-OuJpSeypjI';\n\nconst mapStyles = {\n    top: '0',\n    buttom: '0',\n    width: 'auto',\n    height: 'auto',\n    left: '300px',\n};\n\nclass MapContainer extends Component {    \n    state = {\n        showingInfoWindow: false,\n        activeMarker: {},\n        selectedPlace: {},\n        provinceResponse:[],        \n        placeResponse:[],\n        placeList:[], \n        coor:[],\n        clickedPlace: '',\n        targetProvince: '',\n        threadId:'',\n        threadTitle: '',\n        mapLat: \"\", \n        mapLon: \"\"\n    };\n    \n    componentDidMount() {\n        axios.get(`http://localhost:30011/getRankProvince`, {\n            params: {\n                provinceRank: this.props.match.params.rank\n            }\n        })\n        .then(res => {\n            const provinceResponse = res.data[0];\n            this.setState({ provinceResponse });\n            this.setState({ targetProvince: this.state.provinceResponse.provinceTh });\n\n            const lat = this.state.provinceResponse.provinceLat;\n            const lon = this.state.provinceResponse.provinceLon;\n            this.setState({ mapLat: lat });\n            this.setState({ mapLon: lon });\n\n            return axios.get(`http://localhost:30011/getThreadData`, {\n                params: {\n                    provinceTh: this.state.targetProvince\n                }\n            });\n        })\n        .then(res => {\n            this.setState({ placeResponse: res.data });\n\n            var tmp = []\n            this.state.placeResponse.map(row => \n                row.coor.forEach(function(data){\n                    tmp.push(data);\n                })\n            )\n            this.setState({coor: tmp});\n        })  \n    }\n\n    onMarkerClick = (props, marker, e) =>\n    this.setState({\n        selectedPlace: props,\n        activeMarker: marker,\n        showingInfoWindow: true,\n        clickedPlace: props.name,\n    });\n\n    onMapClicked = (props) => {\n        if (this.state.showingInfoWindow) {\n            this.setState({\n                showingInfoWindow: false,\n                activeMarker: null\n            })\n        }\n    };\n\n    render() {\n        const position = {lat: this.state.mapLat, lng: this.state.mapLon};\n        const target = this.state.targetProvince;\n        return (  \n            <div class=\"noscroll\">\n                <Helmet>\n                    <title>Travel Guide | {target}</title>\n                </Helmet>\n                <NavbarMaps />\n                <div class=\"sidenav\">\n                    <div class=\"sidePlaceName\">{this.state.targetProvince}</div>\n                    <div class=\"sideClickedPlace\">{this.state.clickedPlace}</div>\n\n                    {this.state.placeResponse.map( thread => {\n                        return thread.placeList.map( place => {\n                            return place === this.state.clickedPlace ?\n                                <a href={\"https://pantip.com/topic/\"+thread.threadId}>\n                                    <div class=\"sideLinkBox\">\n                                        <div class=\"sideLinkTitle\">\n                                            {thread.threadTitle}\n                                        </div>\n                                    </div>  \n                                </a>\n                                : null\n                        })\n                    })}\n                </div>\n                \n                <Map google={this.props.google}\n                    style={mapStyles}\n                    zoom={11}\n                    center={position}\n                >\n                    {this.state.coor.map( place => {\n                        return place.province === this.state.targetProvince ?\n                            <Marker key={place.placeId}\n                                onClick={this.onMarkerClick}\n                                name={place.placeName}\n                                position={{lat: place.lat,lng: place.lon}}/>\n                            : null\n                        }\n                    )}\n\n                    <StyledInfoWindow\n                        marker={this.state.activeMarker}\n                        visible={this.state.showingInfoWindow}>\n\n                        <p>{this.state.selectedPlace.name}</p>\n\n                        \n                        \n                        <img src={`https://maps.googleapis.com/maps/api/place/photo?maxwidth=400&maxheight=400&photoreference=ATtYBwKOm3-AaHIVAeKfO2FcdI-aklSxYYILLlqV6xAjflHX4xTtgdHOAfs6yCyaOEDyvkxILAu_kuSnVwCY3VK1XmDDSUPI6j6HOI1tuDbyQdFsjcE9QUgLsMHtYWmzHCjH1VxTkVxhiqlhthGtzSZCS2ie48KSRIihzdisFWDX_PtsWIPw&key=${REACT_APP_API_KEY}`} \n                            alt={this.state.selectedPlace.name}\n                            width={168} \n                        />\n                    </StyledInfoWindow>\n                </Map>\n            </div>\n        );\n    }\n}\n\nexport default GoogleApiWrapper({\n    apiKey: ('AIzaSyDDViAvlzx_1iSnaUKtNNLr-OuJpSeypjI')\n})(MapContainer)"]},"metadata":{},"sourceType":"module"}