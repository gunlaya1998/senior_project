"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireDefault(require("react"));

var _Paper = _interopRequireDefault(require("@material-ui/core/Paper"));

var _Popper = _interopRequireDefault(require("@material-ui/core/Popper"));

var _ClickAwayListener = _interopRequireDefault(require("@material-ui/core/ClickAwayListener"));

var _ListItem = _interopRequireDefault(require("@material-ui/core/ListItem"));

var _List = _interopRequireDefault(require("@material-ui/core/List"));

var _ListItemText = _interopRequireDefault(require("@material-ui/core/ListItemText"));

var _ListItemAvatar = _interopRequireDefault(require("@material-ui/core/ListItemAvatar"));

var _Avatar = _interopRequireDefault(require("@material-ui/core/Avatar"));

var _styles = require("@material-ui/core/styles");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function autoSizing(data) {
  data.styles.width = data.offsets.reference.width;
  data.offsets.popper.top = data.offsets.reference.bottom - 8;
  data.offsets.popper.left = data.offsets.reference.left;
  data.offsets.popper.width = Math.round(data.offsets.reference.width) - 1;
  return data;
}

var MenuList = function MenuList(props) {
  function AvatarItem(prop) {
    if (props.template.avatar) {
      var src = "".concat(prop.item[props.template.avatar.name]);

      if (props.template.avatar.src) {
        src = "".concat(props.template.avatar.src).concat(prop.item[props.template.avatar.name]);
      }

      return _react["default"].createElement(_ListItemAvatar["default"], null, _react["default"].createElement(_Avatar["default"], {
        alt: prop.item[props.template.avatar.name],
        src: src
      }));
    }

    return true;
  }

  if (props.items.length > 0) {
    var styles = {};

    if (props.template.height) {
      styles = {
        maxHeight: props.template.height,
        overflowY: 'scroll'
      };
    }

    return _react["default"].createElement(_ClickAwayListener["default"], {
      onClickAway: props.onClose
    }, _react["default"].createElement(_Popper["default"], {
      open: props.isOpen,
      anchorEl: props.anchorEl,
      placement: "bottom",
      modifiers: {
        autoSizing: {
          enabled: true,
          fn: autoSizing,
          order: 840
        }
      }
    }, _react["default"].createElement(_Paper["default"], {
      style: styles
    }, _react["default"].createElement(_List["default"], {
      component: "nav"
    }, props.items.map(function (item, index) {
      return _react["default"].createElement(_ListItem["default"], {
        button: true,
        key: index,
        onClick: function onClick(e) {
          return props.onItemClick(e, item);
        },
        "data-value": item[props.template.title]
      }, _react["default"].createElement(AvatarItem, {
        item: item
      }), _react["default"].createElement(_ListItemText["default"], {
        primary: item[props.template.title],
        secondary: item[props.template.subtitle]
      }));
    })))));
  } else {
    return true;
  }
};

var _default = MenuList;
exports["default"] = _default;